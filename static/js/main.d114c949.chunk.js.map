{"version":3,"sources":["Utils/EventListener.js","Components/Timer/Style.js","Components/Timer/Timer.jsx","App.js","reportWebVitals.js","index.js"],"names":["eventName","handler","element","window","savedHandler","useRef","useEffect","current","addEventListener","eventListener","event","removeEventListener","container","height","display","alignItems","justifyContent","position","backgroundColor","helpText","top","left","paddingLeft","fontSize","lineHeight","zIndex","color","textContainer","marginLeft","marginRight","inset","CONSTANTS","Timer","props","interval","React","useState","min","sec","time","setTime","initialTime","setInitialTime","running","setRunning","progressPercentage","setProgressPercentage","editSelected","setEditSelected","console","log","KEY_FUNCTIONS","prevTime","useEventListener","key","code","timeInSec","initialTimeInSec","calculatePercentage","setInterval","clearInterval","getTimeFromPath","response","match","params","pathname","trim","replace","split","parseInt","timeFromPath","setTimer","style","styles","id","background","transition","width","toString","length","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d114c949.chunk.js","sourcesContent":["import React, { useEffect, useRef } from 'react';\r\n\r\nexport default (eventName, handler, element = window) => {\r\n    // Create a ref that stores handler\r\n    const savedHandler = useRef();\r\n    // Update ref.current value if handler changes.\r\n    // This allows our effect below to always get latest handler ...\r\n    // ... without us needing to pass it in effect deps array ...\r\n    // ... and potentially cause effect to re-run every render.\r\n    useEffect(() => {\r\n        savedHandler.current = handler;\r\n    }, [handler]);\r\n    useEffect(\r\n        () => {\r\n            // Make sure element supports addEventListener\r\n            // On\r\n            const isSupported = element && element.addEventListener;\r\n            if (!isSupported) return;\r\n            // Create event listener that calls handler function stored in ref\r\n            const eventListener = (event) => savedHandler.current(event);\r\n            // Add event listener\r\n            element.addEventListener(eventName, eventListener);\r\n            // Remove event listener on cleanup\r\n            return () => {\r\n                element.removeEventListener(eventName, eventListener);\r\n            };\r\n        },\r\n        [eventName, element] // Re-run if eventName or element changes\r\n    );\r\n}\r\n","export default {\r\n    container: {\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        position: \"relative\",\r\n        backgroundColor: \"#150e56\"\r\n    },\r\n    helpText: {\r\n        position: \"absolute\",\r\n        top: 0,\r\n        left: 0,\r\n        paddingLeft: 10,\r\n        fontSize: \"1vw\",\r\n        lineHeight: \"0.4vw\",\r\n        zIndex: 1,\r\n        color: \"#d0d0d0\"\r\n    },\r\n    textContainer: {\r\n        fontSize: \"10vw\",\r\n        position: \"absolute\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        inset: \"unset\"\r\n    }\r\n}","import React, { useEffect, useRef, useCallback } from 'react';\r\nimport { useEventListener, DEFAULT_KEY } from '../../Utils'\r\nimport styles from './Style'\r\n\r\nconst CONSTANTS = {\r\n    MIN: \"min\",\r\n    SEC: \"sec\",\r\n    TEXT_PRIMARY_COLOR: \"#d0d0d0\",\r\n    TEXT_SECONDARY_COLOR: \"#686868\",\r\n    MIN_STEP: 5,\r\n    SEC_STEP: 5\r\n}\r\n\r\nconst Timer = (props) => {\r\n    const [time, setTime] = React.useState({ min: 0, sec: 0 })\r\n    const [initialTime, setInitialTime] = React.useState({ min: 0, sec: 0 })\r\n    const [running, setRunning] = React.useState(false)\r\n    const [progressPercentage, setProgressPercentage] = React.useState(0)\r\n    const [editSelected, setEditSelected] = React.useState(CONSTANTS.MIN)\r\n    let interval\r\n    console.log(\"REFRESH?\",props)\r\n    const KEY_FUNCTIONS = {\r\n        \"Space\": () => {\r\n            setRunning(!!!running)\r\n        },\r\n        \"KeyR\": () => {\r\n            setRunning(false)\r\n            setTime(initialTime)\r\n            setProgressPercentage(0)\r\n        },\r\n        \"ArrowUp\": () => {\r\n            if (editSelected === CONSTANTS.SEC && (time.sec + CONSTANTS.SEC_STEP) < 59) {\r\n                setInitialTime(prevTime => ({ ...prevTime, sec: prevTime.sec + CONSTANTS.SEC_STEP }))\r\n                setTime(prevTime => ({ ...prevTime, sec: prevTime.sec + CONSTANTS.SEC_STEP }))\r\n            } else if (editSelected === CONSTANTS.MIN && (time.min + CONSTANTS.MIN_STEP) < 59) {\r\n                setInitialTime(prevTime => ({ ...prevTime, min: prevTime.min + CONSTANTS.MIN_STEP }))\r\n                setTime(prevTime => ({ ...prevTime, min: prevTime.min + CONSTANTS.MIN_STEP }))\r\n            }\r\n        },\r\n        \"ArrowDown\": () => {\r\n            if (editSelected === CONSTANTS.SEC && (time.sec - CONSTANTS.SEC_STEP) > 0) {\r\n                setInitialTime(prevTime => ({ ...prevTime, sec: prevTime.sec - CONSTANTS.SEC_STEP }))\r\n                setTime(prevTime => ({ ...prevTime, sec: prevTime.sec - CONSTANTS.SEC_STEP }))\r\n            } else if (editSelected === CONSTANTS.MIN && (time.min - CONSTANTS.MIN_STEP) > 0) {\r\n                setInitialTime(prevTime => ({ ...prevTime, min: prevTime.min - CONSTANTS.MIN_STEP }))\r\n                setTime(prevTime => ({ ...prevTime, min: prevTime.min - CONSTANTS.MIN_STEP }))\r\n            }\r\n        },\r\n        \"ArrowLeft\": () => {\r\n            if (editSelected === CONSTANTS.SEC) {\r\n                setEditSelected(CONSTANTS.MIN)\r\n            }\r\n        },\r\n        \"ArrowRight\": () => {\r\n            if (editSelected === CONSTANTS.MIN) {\r\n                setEditSelected(CONSTANTS.SEC)\r\n            }\r\n        }\r\n    }\r\n    useEventListener(\"keydown\", (key) => {\r\n        if (KEY_FUNCTIONS[key.code]) {\r\n            KEY_FUNCTIONS[key.code]()\r\n        }\r\n    })\r\n    useEventListener(\"touchend\", (key) => {\r\n        KEY_FUNCTIONS[\"Space\"]() || DEFAULT_KEY()\r\n    })\r\n    const setTimer = () => {\r\n        const timeFromPath = getTimeFromPath()\r\n        if (((timeFromPath.min > 0 || timeFromPath.sec > 0) && (time.sec === 0 && time.min === 0)) || (time.sec !== timeFromPath.sec || time.min !== timeFromPath.min)) {\r\n            setInitialTime(timeFromPath)\r\n            setTime(timeFromPath)\r\n        }\r\n    }\r\n\r\n    const calculatePercentage = () => {\r\n        const { min, sec } = time\r\n        const timeInSec = (min * 60) + sec\r\n        const initialTimeInSec = (initialTime.min * 60) + initialTime.sec\r\n        setProgressPercentage((timeInSec * 100) / initialTimeInSec)\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        calculatePercentage()\r\n    }, [time])\r\n\r\n    React.useEffect(() => {\r\n        if (running && !interval) {\r\n            interval = setInterval(() => {\r\n                setTime(prevTime => {\r\n                    if (prevTime.sec > 0) {\r\n                        return { ...prevTime, sec: prevTime.sec - 1 }\r\n                    } else if (prevTime.sec === 0 && prevTime.min > 0) {\r\n                        return { min: prevTime.min - 1, sec: 59 }\r\n                    } else {\r\n                        setRunning(false)\r\n                        clearInterval(interval)\r\n                        return { min: 0, sec: 0 }\r\n                    }\r\n                })\r\n            }, 1000)\r\n        }\r\n\r\n        return () => {\r\n            clearInterval(interval)\r\n        }\r\n\r\n    }, [running])\r\n\r\n    const getTimeFromPath = () => {\r\n        let response = { min: 0, sec: 0 }\r\n        if (props.match.params && props.match.params.time) {\r\n            let pathname = props.match.params.time;\r\n\r\n            if (pathname.trim()) {\r\n                pathname = pathname.replace(\"minutes\", '.').replace(\"seconds\", \"\").replace(\"minute\", '.').replace(\"second\", \"\").replace(\"min\", '.').replace(\"sec\", \"\")\r\n                const [min, sec] = pathname.split(\".\")\r\n                response = { min: parseInt(min), sec: parseInt(sec) }\r\n            }\r\n        }\r\n\r\n        return response\r\n    }\r\n    setTimer()\r\n\r\n    return (\r\n        <div style={styles.container}>\r\n            <div id=\"help-text\" style={styles.helpText}>\r\n                <p>Touch screen: Start/Pause Timer</p>\r\n                <p>Space: Start/Pause Timer</p>\r\n                <p>R: Reset Timer</p>\r\n                <p>Left/Right Arrow: Select edit</p>\r\n                <p>Up/Down Arrow: Change value</p>\r\n            </div>\r\n            <div style={{\r\n                background: \"rgb(111, 74, 161)\",\r\n                height: \"inherit\",\r\n                transition: \"width .2s ease-in\",\r\n                position: \"absolute\",\r\n                left: 0,\r\n                width: `${progressPercentage}%`\r\n            }}></div>\r\n            <div style={styles.textContainer}>\r\n                <span\r\n                    style={{\r\n                        color: editSelected === CONSTANTS.MIN && !running ? CONSTANTS.TEXT_SECONDARY_COLOR : CONSTANTS.TEXT_PRIMARY_COLOR\r\n                    }}\r\n                >\r\n                    {time.min.toString().length > 1 ? time.min : `0${time.min}`}\r\n                </span>\r\n                <span style={{ color: CONSTANTS.TEXT_PRIMARY_COLOR }}>\r\n                    :\r\n                </span>\r\n                <span\r\n                    style={{\r\n                        color: editSelected === CONSTANTS.SEC && !running ? CONSTANTS.TEXT_SECONDARY_COLOR : CONSTANTS.TEXT_PRIMARY_COLOR\r\n                    }}>\r\n\r\n                    {time.sec.toString().length > 1 ? time.sec : `0${time.sec}`}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Timer\r\n","import React, { useEffect, useRef, useCallback } from 'react';\nimport {Route, Switch, HashRouter} from \"react-router-dom\"\nimport {default as Timer} from './Components/Timer/Timer'\nimport {default as Welcome} from './Components/Welcome'\n// TODO: \n// - Pagina de ayuda con instrucciones (el inicio? timer/)\n// - Cambio de colores\n// - Cambio de direccion de progreso\n// - Notificacion\n\nfunction App() {\n\n\n  return (\n    <HashRouter>\n      <Switch>\n        <Route exact path=\"/\" component={Timer} />\n        <Route exact path=\"/:time\" component={Timer} />\n      </Switch>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}